class Product:
    def __init__(self, *args):
        self.name, self.price = args


class User:
    def __init__(self, login, balance=0):
        self.login = login
        self.balance = balance

    def __str__(self):
        return f'Пользователь {self.login}, баланс - {self.balance}'

    @property
    def balance(self):
        return self.__balance

    @balance.setter
    def balance(self, balance):
        self.__balance = balance

    def deposit(self, value):
        self.__balance += value

    def payment(self, value):
        if self.balance - value < 0:
            print('Не хватает средств на балансе. Пополните счет')
            return False
        self.balance -= value
        return True


class Cart:
    def __init__(self, user):
        self.user = user
        self.goods = {}
        self.__total = 0

    def add(self, product, count=1):
        self.goods[product] = self.goods.get(product, 0) + count
        self.__total += product.price * count

    def remove(self, product, count=1):
            if product in self.goods and self.goods[product] < count:
                count = self.goods[product]
                self.goods[product] -= count
                self.__total -= product.price * count
                del self.goods[product]
            else:
                self.goods[product] -= count
                self.__total -= product.price * count

    @property
    def total(self):
        return self.__total

    def order(self):
        if self.user.payment(self.total):
            print('Заказ оплачен')
        else:
            print('Проблема с оплатой')

    def print_check(self):
        print('---Your check---')
        for i in sorted(self.goods.items(), key=lambda x: x[0].name):
            print(f'{i[0].name} {i[0].price} {i[1]} {i[0].price * i[1]}')
        print(f'---Total: {self.total}---')




